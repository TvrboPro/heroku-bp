 /*  

 ```
@include vh('height', 100, false);
```

```
height: 100vh;
```

The Mixin takes three parameters.
  - Property: String - _ie 'height' or 'max-height'_
    - The property you want to be generated.
  - Value: Number _ie 100 or 80_
    - The number of viewport units you want the element to take up.
  - Important: Boolean - _ie true or false_
    - Whether or not you want the generated property to have the !important flag.

```
.example {
  @include vh('max-height', 100, true);
}
```

Would output...

```
.example {
  max-height: 100vh !important;
}
@media all and (device-width: 768px) and (device-height: 1024px) and (orientation: portrait) {
  .example {
    max-height: 1024px !important;
  }
}
@media all and (device-width: 768px) and (device-height: 1024px) and (orientation: landscape) {
  .example {
    max-height: 768px !important;
  }
}
@media all and (device-width: 320px) and (device-height: 480px) and (orientation: portrait) {
  .example {
    max-height: 480px !important;
  }
}
@media all and (device-width: 320px) and (device-height: 480px) and (orientation: landscape) {
  .example {
    max-height: 320px !important;
  }
}
@media all and (device-width: 320px) and (device-height: 568px) and (orientation: portrait) {
  .example {
    max-height: 568px !important;
  }
}
@media all and (device-width: 320px) and (device-height: 568px) and (orientation: landscape) {
  .example {
    max-height: 320px !important;
  }
}
@media all and (device-width: 375px) and (device-height: 667px) and (orientation: portrait) {
  .example {
    max-height: 667px !important;
  }
}
@media all and (device-width: 375px) and (device-height: 667px) and (orientation: landscape) {
  .example {
    max-height: 375px !important;
  }
}
@media all and (device-width: 414px) and (device-height: 736px) and (orientation: portrait) {
  .example {
    max-height: 736px !important;
  }
}
@media all and (device-width: 414px) and (device-height: 736px) and (orientation: landscape) {
  .example {
    max-height: 414px !important;
  }
}



 */

@mixin viewport($unit: "vh", $property: "height", $amount: 100, $important: false, $sourceProperty: "height") {
    #{$property}: #{$amount}#{$unit} if($important, !important, null);
    $sizes: (iPad: ("width" 768, "height" 1024), iPhone4: ("width" 320, "height" 480), iPhone5: ("width" 320, "height" 568), iPhone6: ("width" 375, "height" 667), iPhone6Plus: ("width" 414, "height" 736));
    $orientations: 0 portrait, 1 landscape;
    $pxwidth: null;
    $pxheight: null;
    @each $name, $size in $sizes {
        @each $index, $orientation in $orientations {
            $map: map-get($sizes, $name);
            @each $key, $value in $map {
                @if $sourceProperty == "height" {
                    @if $key == "height" {
                        $pxheight: $value;
                    }
                    @else {
                        $pxwidth: $value;
                    }
                }
                @else {
                    @if $key == "height" {
                        $pxwidth: $value;
                    }
                    @else {
                        $pxheight: $value;
                    }
                }
            }
            @media all and (device-width: #{$pxwidth}px) and (device-height: #{$pxheight}px) and (orientation: $orientation) {
                #{$property}: #{if($orientation == portrait, $pxheight, $pxwidth) * $amount / 100}px if($important, !important, null);
            }
        }
    }
}

@mixin vh($property: "height", $amount: 100, $important: false, $sourceProperty: "height") {
    @include viewport("vh", $property, $amount, $important, $sourceProperty);
}

@mixin vw($property: "width", $amount: 100, $important: false, $sourceProperty: "width") {
    @include viewport("vw", $property, $amount, $important, $sourceProperty);
}

@mixin vmin($property: "height", $amount: 100, $important: false, $sourceProperty: "height") {
    @include viewport("vmin", $property, $amount, $important, $sourceProperty);
}

@mixin vmax($property: "height", $amount: 100, $important: false, $sourceProperty: "height") {
    @include viewport("vmax", $property, $amount, $important, $sourceProperty);
}