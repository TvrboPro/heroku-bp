@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 300;
  src: local('Open Sans Light'), local('OpenSans-Light'), url(../fonts/OpenSans-Light.ttf) format('ttf');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  src: local('Open Sans'), local('OpenSans'), url(../fonts/OpenSans-Regular.ttf) format('ttf');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 600;
  src: local('Open Sans Semibold'), local('OpenSans-Semibold'), url(../fonts/OpenSans-Semibold.ttf) format('ttf');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  src: local('Open Sans Bold'), local('OpenSans-Bold'), url(../fonts/OpenSans-Bold.ttf) format('ttf');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}

body {
    font-family: 'OpenSans';

    .strong {
        font-weight: bold;
    }
    .g-book {
        font-family: 'OpenSans-Light' !important;
    }
    .g-medium {
        font-family: 'OpenSans-Semibold' !important;
    }
    .g-bold {
        font-family: 'OpenSans-Bold' !important;
    }
    h6, p {
        letter-spacing: 2px;
    }
    p {
        font-size: 16px;
    }
    p.small {
        font-size: 11px;
    }
    h6 {
        font-size: 25px;
        font-weight: normal;
        & + h6 {
            line-height: 1.3 !important;
        }
        @media only screen and (max-width: 40.063em) {
            font-size: 20px;
            font-size: 5vw;
        }
    }
 /*  
    Modifiers  

    .text-- WHATEVER 
 */
    .text--center {
        text-align: center;
    }
    .text--left {
        text-align: left;
    }
    .text--right {
        text-align: right;
    }
    .text--justify {
        text-align: justify;
        text-justify: distribute;
    }
    .text--thin {
        @include font-size(50px);
        font-weight: 100;
    }
    .text--bold {
        font-weight: 900;
    }
    .text--bold.text--italic {
        @include font-size(90px);
        font-style: italic;
    }
    .text--uppercase {
        text-transform: uppercase;
    }
    .text--underline {
        text-decoration: none;
        display: inline-block;
        &:after {
            content: "";
            display: block;
            height: 2px;
            margin: 0 auto;
            background: $darth;
            width: 100%;
        }
    }
    /**
     * Inherit the ancestor's text color.
     */
    .text-inherit-color {
        color: inherit !important;
    }
    /**
     * Enables font kerning in all browsers.
     * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
     *
     * 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
     * 2. Chrome (not Windows), Firefox, IE 10+
     * 3. Safari 7 and future browsers
     */
    .text--kern {
        text-rendering: optimizeLegibility;
        /* 1 */
        font-feature-settings: "kern" 1;
        /* 2 */
        font-kerning: normal;
        /* 3 */
    }
    /**
     * Text truncation
     *
     * Prevent text from wrapping onto multiple lines, and truncate with an
     * ellipsis.
     *
     * 1. Ensure that the node has a maximum width after which truncation can
     *    occur.
     * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
     *    nodes.
     */
    .text--elipsis {
        max-width: 100%;
        /* 1 */
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        white-space: nowrap !important;
        word-wrap: normal !important;
        /* 2 */
    }
    /**
     * Word breaking
     *
     * Break strings when their length exceeds the width of their container.
     */
    .text--break {
        word-wrap: break-word !important;
    }
}